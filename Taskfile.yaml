version: "3"

tasks:
  setup:
    desc: "Setup the project"
    cmds:
      - go mod download
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install github.com/goreleaser/goreleaser@latest
      - go install github.com/segmentio/golines@latest
      - go install mvdan.cc/gofumpt@latest

  build:
    desc: "Build the Go project"
    deps:
      - go-mod-tidy
      # - go-releaser-local
    cmds:
      - go build -o build/kubeit .

  fmt:
    desc: "Format Go code"
    cmds:
      - "$(go env GOPATH)/bin/golines --write-output ."
      - "$(go env GOPATH)/bin/gofumpt -l -w ."
      - go fmt
      - "$(go env GOPATH)/bin/golangci-lint run --fix"

  run:
    desc: "Run the KubeIt CLI with arguments"
    cmds:
      - build/kubeit {{.CLI_ARGS}}
    deps:
      - build

  lint:
    desc: "Run golangci-lint"
    cmds:
      - ~/go/bin/golangci-lint run

  generate:
    deps:
      - generate-schema
      - generate-cli-docs

  generate-schema:
    desc: Generate the schema for Kubeit configuration
    cmds:
      - build/kubeit generate-schema
    deps:
      - build

  generate-cli-docs:
    desc: Generate the CLI documentation for Kubeit
    cmds:
      - build/kubeit generate --output-dir ./docs cli-docs
    deps:
      - build

  ### Test operations
  test:
    desc: "Run tests"
    deps:
      - go-tests
    cmds:
      - build/kubeit generate manifest file://$(pwd)/examples/kubeit-helm/
      - build/kubeit generate manifest ./examples/kubeit-helm-oci/
      - build/kubeit generate manifest foo:latest
      - build/kubeit generate manifest docker://foo:latest

  go-tests:
    desc: "Run Go tests"
    cmds:
      - go test -coverprofile=coverage.out ./...
      - go tool cover -html=coverage.out -o coverage.html
      - go tool cover -func=coverage.out
  ### End test operations

  int-test:
    desc: "Run integration test"
    cmds:
      - docker build $(task run -- generate docker-labels ./examples/kubeit-helm) -t foo ./examples
      - task run -- generate manifest file://$(pwd)/examples/kubeit-helm/
      - task run -- generate manifest ./examples/kubeit-helm-oci/
      - task run -- generate manifest foo:latest
      - task run -- generate manifest docker://foo:latest

  ## Go related operations
  go-mod-tidy:
    desc: Tidy go modules
    cmds:
      - go mod tidy

  go-mod-update:
    desc: Update go modules
    deps:
      - go-mod-tidy
    cmds:
      - go get -u ./...
  ## End Go related operations

  go-releaser-local:
    desc: Run Go releaser locally to produce artifacts
    cmds:
      - ~/go/bin/goreleaser --snapshot --skip=publish --clean
