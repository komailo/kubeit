name: CI Workflow
on:
  merge_group:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.merged && github.base_ref || github.head_ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
  checks: write

jobs:
  validate-go-mod-tidy:
    runs-on: internal-github-action-runner-light
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
        with:
          go-version-file: go.mod

      - name: Verify go.mod and go.sum are tidy
        run: |
          if ! go mod tidy -diff; then
            echo "::error:: go.mod or go.sum is not tidy. Please run 'go mod tidy' and commit the changes."
            exit 1
          fi

  go-tests:
    runs-on: internal-github-action-runner-light
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # Docker is setup for integration tests
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
        with:
          go-version-file: go.mod

      - name: Run Tests and Generate Coverage Report
        run: |
          go test -coverprofile=coverage.out ./...

      - name: Ensure Coverage Does Not Drop
        run: |
          go install github.com/ory/go-acc@latest
          go tool cover -func=coverage.out | grep total | awk '{print $3}' > coverage.txt
          current_coverage=$(cat coverage.txt)
          echo "Current coverage: $current_coverage"
          if (( $(echo "$current_coverage < $MINIMUM_COVERAGE" | bc -l) )); then
            echo "::error:: Test coverage has dropped below the minimum threshold."
            exit 1
          fi
        env:
          MINIMUM_COVERAGE: 6.7 # Set your minimum coverage threshold here

  docker:
    name: "Docker"
    uses: scorebet/github-workflows/.github/workflows/docker-ci-workflow.yml@main
    secrets: inherit
    with:
      image-name: "reflow"

  # The ci-final-status job allows to combine all required status check into one.
  # The ruleset will enforce that ci-final-status check passes before the PR is allowed to be merged.
  # THE JOBID AND NAME, ci-final-status, MUST NOT CHANGE. IT WILL IMPACT STATUS CHECK ENFORCEMENT
  ci-final-status:
    name: "ci-final-status"
    needs:
      # Add all job IDs here that should be considered
      # This ensures final-status passes only if all `needs` jobs succeed
      - docker
      - go-tests
      - validate-go-mod-tidy
    runs-on: internal-github-action-runner-light
    if: always() # Ensures this job runs even if one of the needs is skipped or fails
    steps:
      - name: Check workflow status
        uses: scorebet/check-workflow-status-action@main
        with:
          jobs: ${{ toJSON(needs) }}
